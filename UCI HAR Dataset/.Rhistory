# load the jpeg library
library(jpeg)
# download file
if (!file.exists("./data/instructor_img.jpg")) {
# if we don't have the data file, download it
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL, destfile="./data/instructor_img.jpg", method="curl")
}
# load file
instructor_img <- readJPEG("./data/instructor_img.jpg", native=TRUE)
print(quantile(instructor_img, probs = c(0.3, 0.8)))
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
# load files
gdp <- read.csv("./data/gdp_data.csv", sep = ",", header = TRUE) %>% tbl_df
edu <- read.csv("./data/edu_data.csv", sep = ",", header = TRUE) %>% tbl_df
names(gdp)
names(edu)
edu$Short.Name[1:10]
edu$X2.alpha.code[1:10]
levels(edu$X2.alpha.code)
levels(gdp$X.2)
levels(edu$Short.Name)
?merge
mergedData <- merge(gdp, edu, by.x="X.2", by.y="Short.Name")
length(levels(mergedData$X.2))
length(unique(mergedData$X.2))
summary(mergedData)
library(data.table)
# load data.table package
library(data.table)
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
# load files
gdp <- fread("./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = "CountryCode", "Rank", "Economy", "USD_millions")
# load data.table package
library(data.table)
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
# load files
gdp <- fread("./data/gdp_data.csv", header=FALSE, skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = "CountryCode", "Rank", "Economy", "USD_millions")
# load data.table package
library(data.table)
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
# load files
gdp <- fread("./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = "CountryCode", "Rank", "Economy", "USD_millions")
# load data.table package
library(data.table)
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
# load files
gdp <- fread("./data/gdp_data.csv", header=FALSE, sep=",", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = "CountryCode", "Rank", "Economy", "USD_millions")
?fread
gdp <- fread(file="./data/gdp_data.csv", header=FALSE, sep=",", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = "CountryCode", "Rank", "Economy", "USD_millions")
gdp <- fread(file="./data/gdp_data.csv", header=FALSE, sep=",", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = "CountryCode", "Rank", "Economy", "USD_millions")
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
# load data.table package
library(data.table)
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
# load files
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
edu <- fread("./data/edu_data.csv")
mergedData <- merge(gdp, edu, by="CountryCode")
print(dim(mergedData))
print('this is a test:' 1)
print('this is a test:', 1)
print('this is a test:', 1.0)
print(c('this is a test:', 1.0)
)
sprintf("this is a test: %d", 1)
sprintf("this is a test: %i", 1)
# load data.table package
library(data.table)
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
# load files
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
edu <- fread("./data/edu_data.csv")
mergedData <- merge(gdp, edu, by="CountryCode")
sprintf("Number of matching IDs: %d", nrow(mergedData))
head(mergedData)
names(mergedData)
sorted_mergedData <- merge(gdp, edu, by="CountryCode") %>%
arrange(desc(Rank))
# load data.table package
library(data.table)
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
# load files
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
edu <- fread("./data/edu_data.csv")
sorted_mergedData <- merge(gdp, edu, by="CountryCode") %>%
arrange(desc(Rank))
sprintf("Number of matching IDs: %d", nrow(mergedData))
sprintf("13th ranked country: %s", sorted_mergedData$`Long Name`)
# load data.table package
library(data.table)
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
# load files
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
edu <- fread("./data/edu_data.csv")
sorted_mergedData <- merge(gdp, edu, by="CountryCode") %>%
arrange(desc(Rank))
sprintf("Number of matching IDs: %d", nrow(mergedData))
sprintf("13th ranked country: %s", sorted_mergedData$`Long Name`[13])
levels(sorted_mergedData$`Income Group`)
sorted_mergedData$`Income Group`
sorted_mergedData %>%
group_by(`Income Group`) %>%
summarize(mean(Rank)) %>%
print
?quantile
quantile(sorted_mergedData$Rank)
quantile(sorted_mergedData$Rank) %>% table(sorted_mergedData$`Income Group`)
levels(sorted_mergedData$`Income Group`)
unique(sorted_mergedData$`Income Group`)
sorted_mergedData  <- mutate(sorted_mergedData$GDP_rank_groups = quantile(sorted_mergedData$Rank))
sorted_mergedData  <- mutate(sorted_mergedData, GDP_rank_groups = quantile(sorted_mergedData$Rank))
sorted_mergedData$GDP_rank_groups  <- cut(sorted_mergedData$Rank, breaks=quantile(sorted_mergedData$Rank))
print(table(sorted_mergedData$GDP_rank_groups, sorted_mergedData$`Income Group`))
sorted_mergedData$GDP_rank_groups  <- cut(sorted_mergedData$Rank,
breaks=quantile(sorted_mergedData$Rank,
seq(0, 1, length=5)))
print(table(sorted_mergedData$GDP_rank_groups, sorted_mergedData$`Income Group`))
sorted_mergedData$GDP_rank_groups  <- cut(sorted_mergedData$Rank,
breaks=quantile(sorted_mergedData$Rank,
seq(0, 1, length=6)))
print(table(sorted_mergedData$GDP_rank_groups, sorted_mergedData$`Income Group`))
# to cut GDP Rank into 5 quantiles, we need 6 breaks. We can get this using seq()
# with parameter length=6
sorted_mergedData$GDP_rank_groups  <- cut(sorted_mergedData$Rank,
breaks=quantile(sorted_mergedData$Rank,
seq(0, 1, by=0.2)))
print(table(sorted_mergedData$GDP_rank_groups, sorted_mergedData$`Income Group`))
install.packages("caret")
setwd("~/Documents/courses/coursera/getting_cleaning_data/R/")
library(dplyr)
if (!file.exists("data")) {
dir.create("data")
} else {
if (!file.exists("./data/acs.csv")) {
# if we don't have the data file, download it
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile="./data/acs.csv", method="curl")
dateDownloaded <- date() # let's get a date stamp of our download
}
}
# load data
acs <- read.csv("./data/acs.csv", sep = ",", header = TRUE) %>% tbl_df
splitNames <- strsplit(acs, "wgtp")
names(acs)
splitNames <- strsplit(names(acs), "wgtp")
splitNames
splitNames[[123]]
print(splitNames[[123]])
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
library(data.table)
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
head(gdp)
?sub
gdp$USD_millions <- gsub(",", "", gdp$USD_millions)
head(gdp)
print(mean(gdp$USD_millions))
class(mean(gdp$USD_millions))
class(gdp$USD_millions)
gdp$USD_millions <- gdp$USD_millions %>% gsub(",", "") %>% as.numeric
gdp$USD_millions <- gdp$USD_millions %>% gsub(",", "") %>% as.numeric()
gdp$USD_millions <- gdp$USD_millions %>% gsub(",", "") %>% as.integer()
gdp$USD_millions <-  as.numeric(gsub(",", "", gdp$USD_millions))
class(gdp$USD_millions)
print(mean(gdp$USD_millions))
sum(is.na(mean(gdp$USD_millions)))
gdp$USD_millions
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
gdp$USD_millions
gdp$USD_millions <- gdp$USD_millions %>% gsub(",", "") %>% as.factor() %>% as.numeric()
gdp$USD_millions <- as.numeric(as.factor(gsub(",", "", gdp$USD_millions)))
head(gdp)
gdp$USD_millions
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
as.factor(gsub(",", "", gdp$USD_millions))
gdp$USD_millions <- as.factor(gsub(",", "", gdp$USD_millions))
as.numeric(gdp$USD_millions)
as.numeric(as.factor(gsub(",", "", gdp$USD_millions)))
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
as.numeric(as.factor(gsub(",", "", gdp$USD_millions)))
gdp$USD_millions <- as.numeric(as.factor(gsub(",", "", gdp$USD_millions)))
mean(gdp$USD_millions)
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
class(gdp$USD_millions)
gdp$USD_millions[1]
gdp$USD_millions <- gsub(",", "", gdp$USD_millions)
gdp$USD_millions[1]
as.numeric(gdp$USD_millions[1])
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
as.numeric(gsub(",", "", gdp$USD_millions))
gdp$USD_millions <- as.numeric(gsub(",", "", gdp$USD_millions))
print(mean(gdp$USD_millions))
grep("^United",gdp$CountryCode)
gdp$CountryCode
gdp$Economy
grep("^United",gdp$Economy)
grep("*United",gdp$Economy)
grep("United",gdp$Economy)
?grep
gdp$Economy
grep("^United",gdp$Economy)
grep("^U",gdp$Economy)
grep("U",gdp$Economy)
grep("",gdp$Economy)
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# load files
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
#remove commas from USD_millions and coerce to double
gdp$USD_millions <- as.numeric(gsub(",", "", gdp$USD_millions))
grep("^U",gdp$Economy)
grep("^United",gdp$Economy)
gdp$Economy[1]
gdp$Economy[2]
gdp$Economy[6]
gdp$Economy[32]
grep("^United",gdp$Economy) %>% gdp$Economy[]
united_idx <- grep("^United",gdp$Economy)
print(gdp$Economy[united_idx])
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
edu <- fread("./data/edu_data.csv")
names(gdp)
head(gdp)
head(edu)
?merge
gdp_edu <- merge(gdp, edu, by.x="CountryCode", by.y="CountryCode", all=TRUE)
head(gdp_edu)
grep("^Fiscal year end: June 30.*'gdp_edu$`Special Notes`
)
grep("^Fiscal year end: June 30.*",'gdp_edu$`Special Notes`)
)
grep("^Fiscal Year End: June 30",gdp_edu$`Special Notes`)
gdp_edu$`Special Notes`
grep("^Fiscal year end: June 30",gdp_edu$`Special Notes`)
june30_fiscEnd_idx <- grep("^Fiscal year end: June 30",gdp_edu$`Special Notes`)
print(length(june30_fiscEnd_idx))
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
head(sampleTimes)
sampleTimes = index(amzn)
head(sampleTimes)
library(lubridate)
?`lubridate-package`
years(sampleTimes)[1:10]
year(sampleTimes)[1:10]
sampleYr <- year(sampleTimes)[1:10]
grep(2012, sampleYr)
class(sampleYr)
idx_2012 <- filter(sampleYr, 2012)
dim(sampleYr)
year(sampleTimes)
year(sampleTimes)[1:10]
sampleYr <- year(sampleTimes)
filter(sampleYr, 2012)
?filter
sampleYr==2012
sampleY
sampleYr
class(sampleYr)
idx_2012 <- sampleYr==2012
idx_2012
sampleYr[idx_2012]
?match
match(2012, sampleYr)
sampleYr[1261]
which(sampleYr %in% 2012)
length(which(sampleYr %in% 2012))
idx_2012 <- which(sampleYr %in% 2012)
length(idx_2012)
sampleTimes[idx_2012]
weekdays(sampleTimes[idx_2012])
weekdays(sampleTimes[idx_2012])
which(weekdays(sampleTimes[idx_2012]), "Monday")
which(weekdays(sampleTimes[idx_2012]) %in% "Monday")
mon2012_idx <- which(weekdays(sampleTimes[idx_2012]) %in% "Monday")
length(mon2012_idx)
# load packages
library(dplyr)
# download data (skip if resultant CSV file already on disk)
if (!file.exists("data")) {
dir.create("data")
} else {
if (!file.exists("./data/acs.csv")) {
# if we don't have the data file, download it
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile="./data/acs.csv", method="curl")
dateDownloaded <- date() # let's get a date stamp of our download
}
}
# load data
acs <- read.csv("./data/acs.csv", sep = ",", header = TRUE) %>% tbl_df
# split variable names
splitNames <- strsplit(names(acs), "wgtp")
# print list element 123
print(splitNames[[123]])
# load data.table package
library(data.table)
# download file
# GDP data
if (!file.exists("./data/gdp_data.csv")) {
# if we don't have the GDP data file, download it
gdp_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdp_URL, destfile="./data/gdp_data.csv", method="curl")
}
# load files
gdp <- fread(file="./data/gdp_data.csv", skip=4, nrows=190, select=c(1, 2, 4, 5),
col.names = c("CountryCode", "Rank", "Economy", "USD_millions"))
#remove commas from USD_millions and coerce to double
gdp$USD_millions <- as.numeric(gsub(",", "", gdp$USD_millions))
# print average USD_millions
print(mean(gdp$USD_millions))
united_idx <- grep("^United",gdp$Economy)
print(gdp$Economy[united_idx])
# use GDP data from Q2 & 3
# download & load educational data
if (!file.exists("./data/edu_data.csv")) {
# if we don't have the educational data file, download it
edu_URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(edu_URL, destfile="./data/edu_data.csv", method="curl")
}
edu <- fread("./data/edu_data.csv")
# merge gdp & educational data based on country code
gdp_edu <- merge(gdp, edu, by.x="CountryCode", by.y="CountryCode", all=TRUE)
# how many fiscal years end in June?
june30_fiscEnd_idx <- grep("^Fiscal year end: June 30",gdp_edu$`Special Notes`)
print(length(june30_fiscEnd_idx))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(lubridate)
# find number of values collected in 2012
sampleYr <- year(sampleTimes)
idx_2012 <- which(sampleYr %in% 2012)
length(idx_2012)
# find number of values collected on mondays in 2012
mon2012_idx <- which(weekdays(sampleTimes[idx_2012]) %in% "Monday")
length(mon2012_idx)
library(dplyr)
getwd()
ls
ls()
?getwd
list.files()
setwd("course_project/")
list.files()
setwd("UCI HAR Dataset/")
x_train_data <- read.delim("train/X_train.txt")
library(data.table)
y_train_data <- fread("test/X_test.txt")
x_train_data <- fread("train/X_train.txt")
dim(x_train_data)
dim(y_train_data)
head(x_train_data)
subject_trainRowIdx <- fread("train/subject_train.txt")
?rownames
rownames(x_train_data) <- fread("train/subject_train.txt")
subject_train_rows <- fread("train/subject_train.txt")
dim(subject_train_rows)
rownames(x_train_data) <- subject_train_rows
rownames(x_train_data)
dim(rownames(x_train_data))
length(rownames(x_train_data))
subject_train_rows
subject_train <- fread("train/subject_train.txt")
?mutate
x_train_data <- x_train_data %>% mutate(subject=subject_train) %>%
select(subject, everything())
x_train_data <- x_train_data %>% mutate(subject=subject_train)
subject_train <- as.factor(fread("train/subject_train.txt"))
x_train_data <- x_train_data %>% cbind(subject_train,.) %>%
rename(subject=subject_train)
subject_train <- fread("train/subject_train.txt")
x_train_data <- x_train_data %>% cbind(subject_train,.)
head(x_train_data)
